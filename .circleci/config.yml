#1 =====================================================
# # PHP CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-php/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # Specify the version you desire here
#       - image: circleci/php:7.1-node-browsers

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # Using the RAM variation mitigates I/O contention
#       # for database intensive operations.
#       # - image: circleci/mysql:5.7-ram
#       #
#       # - image: redis:2.8.19

#     steps:
#       - checkout

#       - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
#       - run: sudo docker-php-ext-install zip

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             # "composer.lock" can be used if it is committed to the repo
#             - v1-dependencies-{{ checksum "composer.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run: composer install -n --prefer-dist

#       - save_cache:
#           key: v1-dependencies-{{ checksum "composer.json" }}
#           paths:
#             - ./vendor
#       - restore_cache:
#           keys:
#             - node-v1-{{ checksum "package.json" }}
#             - node-v1-
#       - run: yarn install
#       - save_cache:
#           key: node-v1-{{ checksum "package.json" }}
#           paths:
#             - node_modules

#       # prepare the database
#       - run: touch storage/testing.sqlite
#       - run: php artisan migrate --env=testing --database=sqlite_testing --force

#       # run tests with phpunit or codecept
#       #- run: ./vendor/bin/phpunit
#       - run: ./vendor/bin/codecept build
#       - run: ./vendor/bin/codecept run

#2 ========================================

version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
         working_directory: laravel
         key: composer-v1-{{ checksum "composer.lock" }}
      - run:
          working_directory: laravel
          command: composer install -n --prefer-dist
      - save_cache:
         working_directory: laravel
         key: composer-v1-{{ checksum "composer.lock" }}
         paths:
          - ./laravel/vendor
      - run:
          working_directory: laravel
          command: npm install
      - run:
          working_directory: laravel
          command: npm run dev
      - run:
          name: php test
          working_directory: laravel
          command: vendor/bin/phpunit

#3 ================================================
# version: 2
# jobs:
#   build:
#     machine: true
#     steps:
#       - checkout
#       - run:
#           name: Build Docker Image
#           command: docker-compose build
#       - run:
#           name: Run tests
#           command: |
#             docker-compose run \
#             docker-compose exec app bash \
#             docker-compose
#             docker-compose run sample-laravel-app /bin/bash -c '\
#             cp .env.example .env && \
#             composer install --no-interaction && \
#             php artisan key:generate && \
#             ./artisan migrate:refresh && \
#             ./vendor/bin/phpunit -c phpunit.circle.xml'
